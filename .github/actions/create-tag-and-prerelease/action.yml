name: 'Create Tag and Pre-release'
description: 'Creates a tag and pre-release on GitHub with release notes'

inputs:
  github_token:
    description: 'GitHub token'
    required: true

  build_version:
    description: 'Build version'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Get last tag
      shell: bash
      run: |
        last_tag=$(git describe --tags --abbrev=0)
        echo "last_tag=${last_tag}" >> $GITHUB_ENV

    - name: Get commit range since last tag
      shell: bash
      run: |
        if [ -n "${last_tag}" ]; then
          git log --pretty=format:"| %h | %an <<%ae>> | %s |" "${last_tag}..HEAD" > commit_range.txt
        else
          git log --pretty=format:"| %h | %an <<%ae>> | %s |" HEAD~1
        fi

    - name: Prepare release notes
      shell: bash
      run: |
        echo "## Release Information" > release_notes.md
        echo "| Commit       | Author          | Message            |" >> release_notes.md
        echo "|--------------|-----------------|--------------------|" >> release_notes.md
        cat commit_range.txt >> release_notes.md

    - name: Upload release notes
      uses: actions/upload-artifact@v3
      with:
        name: release_notes
        path: release_notes.md

    - name: Download release notes
      uses: actions/download-artifact@v3
      with:
        name: release_notes

    - name: Read release notes into variable
      shell: bash
      run: |
        release_notes=$(cat release_notes.md)
        echo "release_notes<<EOF" >> $GITHUB_ENV
        echo "$release_notes" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

    - name: Create pre-release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ inputs.build_version }}
        release_name: v${{ inputs.build_version }}
        body: ${{ env.release_notes }}
        prerelease: true
        draft: false
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}

    - name: Output release ID
      shell: bash
      run: echo "release_id=${{ steps.create_release.outputs.id }}" >> $GITHUB_ENV
