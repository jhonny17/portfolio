name: Deploy production
run-name: Deploy production

on:
  workflow_call:
    inputs:
      next_version:
        required: true
        type: string

permissions:
  contents: write
  deployments: write

concurrency:
  group: deploy-production-group-lock

jobs:
  create-tag-and-pre-release:
    name: Create tag and pre-release
    runs-on: ubuntu-latest
    outputs:
      release_id: ${{ steps.create-tag-and-pre-release-step.outputs.release_id }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create tag and pre-release
        id: create-tag-and-pre-release-step
        uses: jhonnyvargasarias/actions/create-tag-and-pre-release@main
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          build_version: ${{ github.event.inputs.next_version }}

  publish:
    name: Publish to Cloudflare Pages
    runs-on: ubuntu-latest
    needs: create-tag-and-pre-release
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        uses: jhonnyvargasarias/portfolio/.github/actions/install-dependencies@main
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build project
        run: pnpm build

      - name: Extract branch name
        id: extract_branch
        run: |
          echo "branch_name=${GITHUB_REF##*/}" >> $GITHUB_OUTPUT

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: ${{ secrets.CLOUDFLARE_PROJECT_NAME }}
          directory: ${{ secrets.BUILD_OUTPUT_DIRECTORY }}
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ steps.extract_branch.outputs.branch_name }}

  publish_release_on_sucess:
    name: Publish Release on Success
    runs-on: ubuntu-latest
    needs: [create-tag-and-pre-release, publish]
    if: ${{ success() }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Update pre-release to release
        uses: jhonnyvargasarias/actions/update-release@main
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_id: ${{ needs.create-tag-and-pre-release.outputs.release_id }}
          prerelease: false
          draft: false

  delete_release_on_failure:
    name: Delete Release on Failure
    runs-on: ubuntu-latest
    needs: [create-tag-and-pre-release, publish]
    if: ${{ failure() || cancelled() }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Delete release
        uses: jhonnyvargasarias/actions/delete-release@main
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_id: ${{ needs.create-tag-and-pre-release.outputs.release_id }}

      - name: Delete tag
        uses: jhonnyvargasarias/actions/delete-tag@main
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          build_version: ${{ github.event.inputs.next_version }}
