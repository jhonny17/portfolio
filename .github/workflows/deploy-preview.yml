name: Deploy preview

on:
  workflow_run:
    workflows: [Run pull request checks]
    types:
      - completed

permissions:
  contents: write
  deployments: write

concurrency:
  group: deploy-preview-${{ github.ref }}
  cancel-in-progress: true

jobs:
  validate_pull_request_checks:
    name: Validate pull request
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Notify Valid To Deploy
        uses: actions/github-script@v7
        if: ${{ github.event.workflow_run.conclusion == 'success' }}
        with:
          github-token: ${{ secrets.PAT_TOKEN }}
          script: |
            core.notice('Valid To Deploy');

      - name: Notify Invalid To Deploy
        uses: actions/github-script@v7
        if: ${{ github.event.workflow_run.conclusion != 'success' }}
        with:
          github-token: ${{ secrets.PAT_TOKEN }}
          script: |
            core.error('Invalid To Deploy');

      - name: Fail If Invalid To Deploy
        if: ${{ github.event.workflow_run.conclusion != 'success' }}
        run: exit 1

  publish:
    name: Publish to Cloudflare Pages
    needs: validate_pull_request_checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        uses: ./.github/actions/install-dependencies

      - name: Build project
        run: pnpm build

      - name: Extract branch name
        id: extract_branch
        run: |
          echo "branch_name=${GITHUB_REF##*/}" >> $GITHUB_OUTPUT

      - name: Deploy to Cloudflare Pages
        id: deploy
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: ${{ secrets.CLOUDFLARE_PROJECT_NAME }}
          directory: ${{ secrets.BUILD_OUTPUT_DIRECTORY }}
          gitHubToken: ${{ secrets.PAT_TOKEN }}
          branch: ${{ steps.extract_branch.outputs.branch_name }}
