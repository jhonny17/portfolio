name: Version bump
run-name: Version bump

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      patch-level:
        description: 'The level of patch version to increment'
        required: false
        type: choice
        default: patch
        options:
          - patch
          - minor
          - major

permissions:
  contents: write
  deployments: write

concurrency:
  group: bump-version-group-lock
  cancel-in-progress: true

jobs:
  run-code-checks:
    name: Run code checks
    uses: ./.github/workflows/run-code-checks.yml
    secrets: inherit

  generate-next-version:
    name: Generate next version
    runs-on: ubuntu-latest
    needs: run-code-checks
    outputs:
      next_version: ${{ steps.generate-next-version.outputs.next_version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate next version
        id: generate-next-version
        uses: jhonnyvargasarias/actions/generate-next-version@main
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          max_patch_version: 10
          max_minor_version: 10
          increment_minor_version: ${{ github.event.inputs.patch-level == 'minor' }}
          increment_major_version: ${{ github.event.inputs.patch-level == 'major' }}

  push-next-version:
    name: Push next version
    runs-on: ubuntu-latest
    needs: generate-next-version
    outputs:
      is_up_to_date: ${{ steps.check-package-json.outputs.is_up_to_date }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check if package.json is up-to-date
        id: check-package-json
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { version } = require('./package.json');
            const nextVersion = '${{ needs.generate-next-version.outputs.next_version }}';
            core.setOutput('is_up_to_date', version === nextVersion);

      - name: Update package.json version
        if: ${{ steps.check-package-json.outputs.is_up_to_date == 'false' }}
        run: |
          npm version ${{ needs.generate-next-version.outputs.next_version }} --no-git-tag-version
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add package.json
          git commit -m "v${{ needs.generate-next-version.outputs.next_version }}"
          git push origin main

  deploy_production:
    name: Deploy to production
    runs-on: ubuntu-latest
    needs: [generate-next-version, push-next-version]
    if: ${{ needs.push-next-version.outputs.is_up_to_date == 'true' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to production
        uses: ./.github/workflows/deploy-production.yml
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          next_version: ${{ needs.generate-next-version.outputs.next_version }}
